; FORWARDING DECISION DIAGRAMS
;
; A "modest generalization of binary decision diagrams" developed for the
; efficient compilation of NetKAT policies to forwarding tables.
;
; As described in
;    "A Fast Compiler for NetKAT" (2015)
;    Steffen Smolka, Spiridon Eliopoulos, Nate Foster, and Arjun Guha.
;    <https://www.cs.cornell.edu/~jnfoster/papers/netkat-compiler.pdf>
;
; Implementation follows the "Binary Decision Diagrams" example from the
; egg-smol test suite, which is available online here:
;    <https://www.mwillsey.com/egg-smol/?example=bdd>

; Called an action in the NetKAT paper
(sort UPDATE (Map i64 String))

; Called an action set in the NetKAT paper...
; We use the Map datatype to represent the set of updates
; The i64s are just placeholders ignored by the set operations
;     set-union
;     set-diff
;     set-intersect
(sort ACTION (Map UPDATE i64))

(datatype FDD
  (IF      ; (if (f = v) tru fls) conditional
    i64    ; fields are encoded as integers
    String ; values are strings
    FDD
    FDD)
  (SET ACTION))

; remove redundant tests
(rewrite (IF f v branch branch) branch)

; Boolean Functions
(function and (FDD FDD) FDD)

; The following rules trigger this bug in the egg-smol type system:
;   <https://github.com/mwillsey/egg-smol/issues/113>
;(rewrite (and (SET (empty)) n) n)
;(rewrite (and n (SET (empty))) n)
